{"mappings":"AAAO,MAAMA,EAAO,CAChBC,SAAUC,SAASC,cAAc,QACjCC,UAAWF,SAASC,cAAc,iBCO/BE,eAAeC,IAClB,MAAMC,QAAiBC,MAHf,iHAQR,aAJmBD,EAASE,M,CCRhCC,QAAQC,IAAIX,EAAKC,UAEjBD,EAAKC,SAASW,iBAAiB,SCCxB,WACHN,IACKO,MAAKC,GAAQA,EAAKC,UAAUC,SAC5BH,MAAKI,GA4Cd,SAA6BA,GAEzB,OAD6BA,EAAgBC,KAAIC,GAKrD,SAA8BA,G,IAMTC,EAIDC,EACGC,EACLC,EACAC,EACOC,EACHC,EACGC,EAfrB,MAAO,CACHC,GAAIT,EAAMS,GACVC,KAAMV,EAAMU,KACZC,UAAWX,EAAMY,MAAMC,MAAMF,UAC7BG,OAAQd,EAAMe,OAAO,GAAGC,IACxBC,YAAmC,QAAtBhB,EAAAD,EAAMJ,UAAUsB,cAAM,IAAtBjB,OAAA,EAAAA,EAAyB,GAAGS,KAGzCS,UAAWnB,EAAMY,MAAMC,MAAMM,UAC7BC,WAA6B,QAAjBlB,EAAAF,EAAMqB,mBAAW,IAAjBnB,OAAA,EAAAA,EAAoB,GAAGoB,KACnCC,cAAgC,QAAjBpB,EAAAH,EAAMqB,mBAAW,IAAjBlB,OAAA,EAAAA,EAAoB,GAAGqB,SACtCC,SAA2B,QAAjBrB,EAAAJ,EAAMqB,mBAAW,IAAjBjB,OAAA,EAAAA,EAAoB,GAAGsB,IACjCC,SAA2B,QAAjBtB,EAAAL,EAAMqB,mBAAW,IAAjBhB,OAAA,EAAAA,EAAoB,GAAGuB,IACjCC,gBAAuC,QAAtBvB,EAAAN,EAAMJ,UAAUsB,cAAM,IAAtBZ,OAAA,EAAAA,EAAyB,GAAGwB,QAAQC,MACrDC,aAAoC,QAAtBzB,EAAAP,EAAMJ,UAAUsB,cAAM,IAAtBX,OAAA,EAAAA,EAAyB,GAAG0B,KAAKvB,KAC/CwB,gBAAuC,QAAtB1B,EAAAR,EAAMJ,UAAUsB,cAAM,IAAtBV,OAAA,EAAAA,EAAyB,GAAG2B,QAAQzB,K,CArBC0B,CAAqBpC,I,CA7ClDqC,CAAoBvC,KAC5CJ,MAAK4C,GAMd,SAAiBA,GACb,MAAMC,EAAeD,EAAYvC,KAAIyC,GAkBzC,SAAuBA,GACnB,MAAO,kGAIQA,EAAM1B,6BACN0B,EAAM9B,2HAKS8B,EAAM9B,6CACP8B,EAAM7B,oDACH6B,EAAMvB,gC,CA9B3BwB,CAAcD,KAGzB3D,EAAKI,UAAUyD,UAAYH,EAAaI,KAAK,G,CAXpBC,CAAQN,KAC5B5C,MAAKC,GAAQJ,QAAQC,IAAIG,EAAM,Y,ICXxC,IAAIkD,EAAY9D,SAASC,cAAc,gBACnC8D,EAAW/D,SAASC,cAAc,aAClC+D,EAAgBhE,SAASC,cAAc,qBAC3CO,QAAQC,IAAIqD,GACZA,EAAUpD,iBAAiB,SAE3B,WACEqD,EAASE,UAAUC,OAAO,Y,IAF5BF,EAActD,iBAAiB,SAI/B,WACEqD,EAASE,UAAUE,IAAI,Y","sources":["src/js/refs.js","src/js/api.js","src/js/onEvent.js","src/js/renderHtml.js","src/js/modal.js"],"sourcesContent":["export const refs = {\n    fetchBtn: document.querySelector(\".btn\"),\n    eventList: document.querySelector('.event_list '),\n}\n","import { refs } from './refs';\n\nconst BASE_URL = 'https://app.ticketmaster.com/discovery/v2/';\nconst source = 'events';\nconst API_KEY = '5HiPtCjBuAY9gthoMA0oQuJCLkmuGiMG';\n\n\nconst url = `${BASE_URL}${source}.json?apikey=${API_KEY}&keyword=\"spice\"`;\n// you can use\nexport async function fetchApiData() {\n    const responce = await fetch(url);\n    const data = await responce.json();\n    // const eventsArray = data._embedded.events;\n    // localStorage.setItem('event', JSON.stringify(data))\n    // console.log(data._embedded.events);\n    return data\n}\n// you can use\n\n\n// in progress DONT touch\nclass EventApi {\n\n    constructor() {\n        this.country\n    }\n\n    setCountry(country) {\n        this.country = country;\n    };\n\n    setEndPoint(endPoint) {\n        config.url = endPoint;\n    };\n\n    setKeyword(keyword) {\n        this.keyword = keyword;\n    }\n}\n\nconst config = {\n    // `url` is the server URL that will be used for the request\n    url: 'events',\n\n    // `method` is the request method to be used when making the request\n    method: 'get', // default\n\n    // `baseURL` will be prepended to `url` unless `url` is absolute.\n    // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n    // to methods of that instance.\n    baseURL: 'https://some-domain.com/api/',\n\n    // `headers` are custom headers to be sent\n    headers: { 'X-Requested-With': 'XMLHttpRequest' },\n\n    // `params` are the URL parameters to be sent with the request\n    // Must be a plain object or a URLSearchParams object\n    // NOTE: params that are null or undefined are not rendered in the URL.\n    params: {\n        apikey: API_KEY, //key for request\n        size: 16, //Page size of the response\n        number: 0, //number of page\n        countryCode: '', //Filter by country code\n        keyword: '', //Keyword to search on\n        includeTBD: '', //yes, to include with a date to be defined (TBD)\n        includeTBA: '', //\n        preferredCountry: [], //Popularity boost by country, default is us [\"us\", \" ca\"]\n\n    },\n\n\n    // `timeout` specifies the number of milliseconds before the request times out.\n    // If the request takes longer than `timeout`, the request will be aborted.\n    timeout: 1000, // default is `0` (no timeout)\n\n    // `responseType` indicates the type of data that the server will respond with\n    // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n    //   browser only: 'blob'\n    responseType: 'json', // default\n}\n\n// const res = localStorage.getItem('event');\n// console.log(JSON.parse(res)._embedded.events);\n\n// in progress DONT touch\n","import { refs } from './refs';\nimport { renderMarckup } from './renderHtml'\n\nconsole.log(refs.fetchBtn);\n\nrefs.fetchBtn.addEventListener('click', renderMarckup);","import { refs } from './refs';\nimport { fetchApiData } from './api'\n\n\n\n\nexport function renderMarckup() {\n    fetchApiData()\n        .then(data => data._embedded.events)\n        .then(eventsArrayFull => shortDataFromServer(eventsArrayFull))\n        .then(eventsArray => marckup(eventsArray))\n        .then(data => console.log(data, '1111111'))\n}\n\n\n\nfunction marckup(eventsArray) {\n    const marckupArray = eventsArray.map(event => {\n        return templateItems(event)\n    })\n\n    refs.eventList.innerHTML = marckupArray.join('')\n}\n\nfunction loadRequiredData(eventsArrayFull) {\n    // const res = localStorage.getItem('event');\n    // eventsArrayFull = JSON.parse(res)._embedded.events;\n\n    // console.log(eventsArray);\n\n}\n\n\n\n\nfunction templateItems(event) {\n    return `\n   <li class=\"list_item\">\n        <div class=\"event_img\">\n          <img\n            src=\"${event.mobImg}\"\n            alt=\"${event.name}\"\n            width=\"120\"\n            height=\"151\"\n          />\n        </div>\n        <h3 class=\"event_title\">${event.name}</h3>\n        <p class=\"event_date\">e${event.localDate}</p>\n        <p class=\"event_location\">${event.concertHall}</p>\n      </li>\n`\n}\n\nfunction shortDataFromServer(eventsArrayFull) {\n    const arrayOfDesiredObjcts = eventsArrayFull.map(value => desiredObjectForPage(value))\n    return arrayOfDesiredObjcts;\n}\n\n\nfunction desiredObjectForPage(value) {\n    return {\n        id: value.id,\n        name: value.name,\n        localDate: value.dates.start.localDate,\n        mobImg: value.images[3].url,\n        concertHall: value._embedded.venues?.[0].name,\n\n\n        localTime: value.dates.start.localTime,\n        ticketType: value.priceRanges?.[0].type,\n        priceCurrency: value.priceRanges?.[0].currency,\n        priceMin: value.priceRanges?.[0].min,\n        priceMax: value.priceRanges?.[0].max,\n        locationAddress: value._embedded.venues?.[0].address.line1,\n        locationCity: value._embedded.venues?.[0].city.name,\n        locationCountry: value._embedded.venues?.[0].country.name,\n    }\n}\n\n\n\n/*\n\n return {\n                id: event.id,\n                name: event.name,\n                localDate: event.dates.start.localDate,\n                localTime: event.dates.start.localTime,\n                ticketType: event.priceRanges?.[0].type,\n\n                priceCurrency: event.priceRanges?.[0].currency,\n                priceMin: event.priceRanges?.[0].min,\n                priceMax: event.priceRanges?.[0].max,\n                locationAddress: event._embedded.venues?.[0].address.line1,\n                locationCity: event._embedded.venues?.[0].city.name,\n                locationCountry: event._embedded.venues?.[0].country.name,\n                concertHall: event._embedded.venues?.[0].name,\n            }\n*/","let modalTest = document.querySelector('.modal__open');\nlet backdrop = document.querySelector('.backdrop');\nlet modalCloseBtn = document.querySelector('.modal__close-btn');\nconsole.log(modalTest);\nmodalTest.addEventListener('click', openModal);\nmodalCloseBtn.addEventListener('click', closeModal);\nfunction openModal() {\n  backdrop.classList.remove('is-hidden');\n}\nfunction closeModal() {\n  backdrop.classList.add('is-hidden');\n}\n"],"names":["$ee27a4d7c64fc8c4$export$21666b427502ea6d","fetchBtn","document","querySelector","eventList","async","$56ca17bb174b0ce3$export$7ee95a47a930384d","responce","fetch","json","console","log","addEventListener","then","data","_embedded","events","eventsArrayFull","map","value","ref","ref1","ref2","ref3","ref4","ref5","ref6","ref7","id","name","localDate","dates","start","mobImg","images","url","concertHall","venues","localTime","ticketType","priceRanges","type","priceCurrency","currency","priceMin","min","priceMax","max","locationAddress","address","line1","locationCity","city","locationCountry","country","$14aa189f0eb781e5$var$desiredObjectForPage","$14aa189f0eb781e5$var$shortDataFromServer","eventsArray","marckupArray","event","$14aa189f0eb781e5$var$templateItems","innerHTML","join","$14aa189f0eb781e5$var$marckup","$8a7e756c566dd1ea$var$modalTest","$8a7e756c566dd1ea$var$backdrop","$8a7e756c566dd1ea$var$modalCloseBtn","classList","remove","add"],"version":3,"file":"index.18f672ae.js.map"}